name: Actions ðŸ˜Ž

on:
  push:
    tags:
      - "v*.*"

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: Behide
          versioning: Semantic
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          retention-days: 2

  compress-builds:
    name: Compress builds
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneLinux64
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneOSX
    steps:
      - name: Download builds
        uses: actions/download-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}

      - name: Compress builds
        uses: vimtor/action-zip@v1
        with:
          files: "."
          dest: Behide-${{ matrix.targetPlatform }}.zip

      - uses: actions/upload-artifact@v3
        with:
          name: Compressed-build-${{ matrix.targetPlatform }}
          path: Behide-${{ matrix.targetPlatform }}.zip
          retention-days: 2

  release:
    name: Release
    needs: compress-builds
    runs-on: ubuntu-latest
    steps:
      - name: Download builds
        uses: actions/download-artifact@v3

      - name: Rename files
        run: |
          mv Compressed-build-StandaloneLinux64/Behide-StandaloneLinux64.zip behide-linux.zip
          mv Compressed-build-StandaloneOSX/Behide-StandaloneOSX.zip behide-osx.zip
          mv Compressed-build-StandaloneWindows/Behide-StandaloneWindows.zip behide-windows32.zip
          mv Compressed-build-StandaloneWindows64/Behide-StandaloneWindows64.zip behide-windows64.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ startsWith( github.ref_name, 'pre' ) }}
          title: ${{ steps.build.outputs.buildVersion }}
          files: |
            Compressed-build-StandaloneLinux64/Behide-StandaloneLinux64.zip
            Compressed-build-StandaloneOSX/Behide-StandaloneOSX.zip
            Compressed-build-StandaloneWindows/Behide-StandaloneWindows.zip
            Compressed-build-StandaloneWindows64/Behide-StandaloneWindows64.zip